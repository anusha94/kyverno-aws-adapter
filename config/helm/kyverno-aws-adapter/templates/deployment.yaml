apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kyverno-aws-adapter.fullname" . }}
  namespace: {{ .Values.namespace.name }}
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: kyverno-aws-adapter
    app.kubernetes.io/part-of: kyverno-aws-adapter
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      {{- with .Values.podSecurityContext }}
      securityContext: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      imagePullSecrets:
      - name: {{ include "kyverno-aws-adapter.fullname" . }}
      containers:
      - command:
        - /manager
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: manager
        env:
        {{- if .Values.awsCredentials }}
        - name: AWS_ACCESS_KEY_ID
          value: {{ .Values.awsCredentials.accessKeyID }}
        - name: AWS_SECRET_ACCESS_KEY
          value: {{ .Values.awsCredentials.secretAccessKey }}
        {{- end }}
        securityContext:
          runAsNonRoot: true
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: kyverno-aws-adapter-sa
      terminationGracePeriodSeconds: 10
